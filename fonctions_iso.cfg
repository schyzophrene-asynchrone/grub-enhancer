# fonctions_iso_V2-1.cfg
# 2015_01_26
#######################################################################################################################
# Redémarrage en cas d'absence ou d'indisponibilité des fichiers (fichier image iso ou fichier de configuration)
function rdmge {
    echo Le PC va redémarrer dans quelques secondes
    sleep -v 10
    reboot
}
#######################################################################################################################
# Avertissement présenté à l'utilisateur si le fichier iso est introuvable, ou n'a pas été donné en paramètre de la commande iso_boot
#   Iso file missing
function no_iso_file {
    if [ -n "${1}" ] ; then
        echo L\'image à partir de laquelle il faut amorcer le PC, ${1}, ne se trouve sur aucun des supports actuellement raccordés à l\'ordinateur.
    else 
        echo Aucune image iso n\'a été attachée au libellé ${chosen} que vous venez de choisir.
    fi
    rdmge
}
#######################################################################################################################
# Avertissement présenté à l'utilisateur si le fichier de configuration est introuvable
#   Grub configuration file missing
function no_cfg_file {
    echo Le fichier de configuration, ${1}, ne se trouve sur aucun des supports actuellement raccordés à l\'ordinateur.
    rdmge
 }
#######################################################################################################################
# Contrôle de l'existence des fichiers
#
function existent_fichiers {
#  recherche du fichier iso
    if [ -n "${iso_file}" ]; then
# si grub trouve le fichier ${iso_file}, alors ce fichier est sur la partition ${root} ; sinon il faut chercher où il est.
        if [ -e "${iso_file}" ]; then set image_iso=${root}; else search --file --set=image_iso --no-floppy "${iso_file}"; fi
    fi
    if [ -z "${image_iso}" ]; then no_iso_file "${iso_file}"; fi
# création du périphérique virtuel qui donne accès au fichier iso
#    creation of the virtual device holding the iso file and paths initialisation
    loopback iso (${image_iso})${iso_file}
    set root=iso
    set loopcfg=
# recherche et introduction du menu spécifique à l'image iso considérée
    if [ -z "${sourcefile}" ]; then set sourcefile=/boot/grub/loopback.cfg; fi
# si le fichier se trouve sur le périphérique $root, il n'est pas utile de le chercher
    if [ -e "${sourcefile}" ]; then set loopcfg=${root} ; else search --file --set=loopcfg --no-floppy "${sourcefile}" ; fi
    if [ -z "${loopcfg}" ]; then no_cfg_file "${sourcefile}";  fi
}
#######################################################################################################################
# Cette procédure crée un periphérique virtuel qui donne accès aux répertoires et fichiers contenu dans le fichier iso
# et cherche le fichier contenant le menu correspondant à l'image iso considérée et l'introduit dans le menu Grub
# paramètre ${1} : le chemin d'accès au fichier iso
# paramètre ${2}, facultatif : le chemin d'accès au fichier contenant les entrées de menu pour l'image iso considérée
#    quand il est omis, il s'agit du fichier /boot/grub/loopback.cfg de l'image iso
function iso_boot  {
    set image_iso=
    set iso_file="${1}"
    set iso_path="${1}"
    set sourcefile="${2}"
    existent_fichiers
    source "(${loopcfg})${sourcefile}"
}
function amorce_iso {
########################################################################################
#
# amorçage par le script shell iso_boot.sh
#
#######################################################################################
# pour éviter le bouclage sur la procédure
    if ${amorceiso}; then
        set amorceiso=false
        save_env amorceiso
        set image_iso=
        set iso_path="${1}"
        set iso_file="${1}"
        set sourcefile="${2}"
        existent_fichiers
        export iso_path
        export iso_file
        export root
        configfile "(${loopcfg})${sourcefile}"
        fi
}
